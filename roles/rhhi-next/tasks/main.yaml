---
  - name: Check provisioning bridge type
    assert:
      that:
        - "ansible_provisioning is defined"
        - "ansible_provisioning.type == 'bridge'"
      fail_msg: "Provisioning interface does not exist or is not of type 'bridge'"
  - name: Check baremetal bridge type
    assert:
      that:
        - "ansible_baremetal is defined"
        - "ansible_baremetal.type == 'bridge'"
      fail_msg: "Baremetal interface does not exist or is not of type 'bridge'"
  - name: Check provisioning bridge MTU
    assert:
      that:
        - "ansible_provisioning.mtu == {{ provisioning_mtu_size }}"
      fail_msg: "MTU size must be {{ provisioning_mtu_size }} but is {{ ansible_provisioning.mtu }}"
  - name: Check baremetal bridge MTU
    assert:
      that:
        - "ansible_baremetal.mtu == {{ baremetal_mtu_size }}"
      fail_msg: "MTU size must be {{ baremetal_mtu_size }} but is {{ ansible_baremetal.mtu }}"
  - name: Check provisioning bridge IP
    assert:
      that:
        - "ansible_provisioning.ipv4.address == '{{ provisioning_ip_address }}'"
      fail_msg: "Provisioning bridge must have the IP address {{ provisioning_ip_address }}"
  - name: Check provisioning bridge slave
    assert:
      that:
        - "'{{ provisioning_slave }}' in ansible_provisioning.interfaces"
      fail_msg: "{{ provisioning_slave }} must have the provisioning bridge set to master"
  - name: Check baremetal bridge slave
    assert:
      that:
        - "'{{ baremetal_slave }}' in ansible_baremetal.interfaces"
      fail_msg: "{{ baremetal_slave }} must have the baremetal bridge set to master"
  - name: Get DHCP offer
    script: files/dhcp.py baremetal
    register: dhcp_offer
  - name: Make sure we get an IP offer
    assert:
      that:
        - "dhcp_offer.stdout_lines|length > 0"
      fail_msg: "No IP was offered via DHCP"
  - name: Output the IP offered by DHCP
    debug: msg="{{ dhcp_offer.stdout_lines.0 }}"
